@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Voat are Copyright (c) 2014 Voat
    All Rights Reserved.*@

@using Voat.Models
@model Message

@{
    int commentContributionPoints = Convert.ToInt32(ViewData["CCP"]);
    string sortingMode = Convert.ToString(ViewData["SortingMode"]);
    
    IEnumerable<Comment> firstComments;
        
    if (sortingMode == "new")
    {
        firstComments = from f in Model.Comments
                            let commentScore = f.Likes - f.Dislikes
                            where f.ParentId == null
                            orderby f.Date descending
                            select f;
    }
    else
    {
        firstComments = from f in Model.Comments
                            let commentScore = f.Likes - f.Dislikes
                            where f.ParentId == null
                            orderby commentScore descending
                            select f;
    }  
}

@if (!User.Identity.IsAuthenticated)
{
    <div class="menuarea">
        <div class="spacer">
            <span class="label label-default">want to join the discussion? <a href="javascript:void(0)" onclick="mustLogin();" class="login-required">login</a> or <a href="/account/register">register</a> in seconds.</span>
        </div>
    </div>
}

<div class="menuarea">
    <h2><span class="label label-default">top 200 comments</span>&nbsp;<a href="javascript:void(0)" class="title-button ">show 500</a></h2>
</div>

<!-- show top 200 submission comments, orderby number of votes each comment has received -->
<div class='commentarea'>
    
    <div id="siteTable" class="sitetable nestedlisting">

        @foreach (var firstComment in firstComments)
            {
                //do not show deleted comments unless they have replies
                if (firstComment.Name == "deleted" && Model.Comments.Where(A => A.ParentId == firstComment.Id).Count() == 0)
                {
                    continue;
                }

                if (firstComment.Likes - firstComment.Dislikes < -3)
                {
                    <div class="thread id-@firstComment.Id comment " data-fullname="" data-ups="" data-downs="">
                        @Html.Partial("~/Views/Shared/Submissions/_SubmissionComment.cshtml", Model, new ViewDataDictionary { { "CommentId", firstComment.Id }, { "CCP", commentContributionPoints }, { "parentIsHidden", true }, { "SortingMode", sortingMode } })
                    </div>
                }
                else
                {
                    <div class="thread id-@firstComment.Id comment " data-fullname="" data-ups="" data-downs="">
                        @Html.Partial("~/Views/Shared/Submissions/_SubmissionComment.cshtml", Model, new ViewDataDictionary { { "CommentId", firstComment.Id }, { "CCP", commentContributionPoints }, { "parentIsHidden", false }, { "SortingMode", sortingMode } })
                    </div>
                }
            }        

    </div>

</div>
