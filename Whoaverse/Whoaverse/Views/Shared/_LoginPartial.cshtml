@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Voat are Copyright (c) 2014 Voat
    All Rights Reserved.*@

@using Microsoft.AspNet.Identity;

<!--Reference the SignalR library. -->
<script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>
<!--SignalR script to update the chat page and send messages.-->
<script>
    $(function () {
        // Reference the auto-generated proxy for the hub.
        var chat = $.connection.messagingHub;

        // Hub accessed function to inform the user about new pending notifications
        chat.client.setNotificationsPending = function (count) {
            // set mail icon
            if ($('#mail').hasClass('nohavemail')) {
                $('#mail').removeClass('nohavemail').addClass('havemail');
            };
            $('#mail').prop('title', 'your have ' + count + ' unread notifications');

            // show mail counter
            $('#mailcounter').show();
            $('#mailcounter').html(count);

            // set browser title
            document.title = '(' + count + ') ' + '@ViewBag.Title';
        };

        // Start the connection.
        $.connection.hub.start().done(function () {
            //
        });
    });

    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
</script>


@if (Request.IsAuthenticated)
{
    int linkKarma = Karma.LinkKarma(User.Identity.GetUserName());
    int commentKarma = Karma.CommentKarma(User.Identity.GetUserName());

    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "nav navbar-nav navbar-right" }))
    {
        @Html.AntiForgeryToken()
        <div id="header-account">
            <div class="logged-in">
                <span class="user">@Html.ActionLink(User.Identity.Name, "UserProfile", "Home", routeValues: new { Id = User.Identity.Name, whattodisplay = String.Empty }, htmlAttributes: new { title = "Profile" })&nbsp;(<span class="userkarma" title="submission contribution points">@linkKarma</span>|<span class="userkarma" title="comment contribution points">@commentKarma</span>)</span>
                <span class="separator">|</span>
                <span class="user">@Html.ActionLink("Manage", "Manage", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })</span>
                <span class="separator">|</span>
                @if (Voat.Utils.User.UserHasNewMessages(User.Identity.Name))
                {
                    <span class="notification-container">
                        <a title="you have new messages" href="/messaging/inbox" class="havemail" id="mail">messages</a>
                        <span class="notification-counter" id="mailcounter">@Voat.Utils.User.UnreadTotalNotificationsCount(User.Identity.Name)</span>
                    </span>
                }
                else
                {
                    <span class="notification-container">
                        <a title="no new messages" href="/messaging/inbox" class="nohavemail" id="mail">messages</a>
                        <span class="notification-counter" id="mailcounter" style="display:none"></span>
                    </span>
                }
                <span class="separator">|</span>
                <a href="javascript:document.getElementById('logoutForm').submit()">Log off</a>
            </div>
        </div>
    }
}
else
{
    if (!Request.Browser.IsMobileDevice)
    {
        <div id="header-account">
            <div class="logged-out">
                <span class="user">want to join? <a href="#" onclick="mustLogin();" class="login-required">login</a> or <a href="/account/register">register</a> in seconds</span>
            </div>
        </div>
    }
    else
    {
        <div id="header-account">
            <div class="logged-out">
                <span class="user" onclick="mustLogin();"><a href="#" class="login-required">login or register</a></span>
            </div>
        </div>
    }
}

